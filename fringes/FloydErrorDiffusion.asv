% Floyd误差扩散算法实现，与前一篇论文（暴力搜索最优误差扩散核）复现里面的实现方法不太一样
% 这里的实现感觉更精简

function binary_img = FloydErrorDiffusion(fringes,height,width,step)
binary_img = zeros(height,width,step);
w1=7/16.0;
w2=3/16.0;
w3=5/16.0;
w4=1/16.0;
for i = 1 : step  % 四步相移
    binary_img(:,:,i) = quantize(fringes(:,:,i),height, width, w1,w2,w3,w4);
end
end

function im = set_pixel(im,x,y,new)
        im(x,y)= new;
end

function im = quantize(im,height, width,w1,w2,w3,w4)
    for y = 1 : +1 : height-1
        for x = 2: +1 : width -1
            old_pixel = im(x,y);
            if old_pixel < 127
                new_pixel = 0;
            else
                new_pixel = 255;
            end
            im = set_pixel(im, x,y,new_pixel);
            quant_error = old_pixel - new_pixel;
            im = set_pixel(im,x+1,y,im(x+1,y) + quant_error*w1);
            im = set_pixel(im,x-1,y+1, im(x-1,y+1) +  quant_error*w2 );
            im = set_pixel(im,x,y+1, im(x,y+1) +  quant_error * w3 );
            im = set_pixel(im,x+1,y+1, im(x+1,y+1) +  quant_error * w4 );
        end
    end
end
